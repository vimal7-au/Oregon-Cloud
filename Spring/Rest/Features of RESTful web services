Features of RESTful web services:

Resource identification through URI:-
Resources are identified by their URIs (typically links on internet). 
So, a client can directly access a RESTful Web Services using the URIs of the resources
(same as you put a website address in the browserâ€™s address bar and get some representation as response).

Uniform interface: 
Resources are manipulated using a fixed set of four create, read, update, delete operations: PUT, GET, POST, and DELETE.


Cache:
To improve network efficiency responses must be capable of being labeled as cacheable or non-cacheable.

Client-Server: 
A clear separation concerns is the reason behind this constraint. 
Separating concerns between the Client and Server helps improve portability in the Client and Scalability of the server components.

Stateless:
Each request from client to server must contain all the information necessary to understand the request,
and cannot take advantage of any stored context on the server.


Named resources:
The system is comprised of resources which are named using a URL.

Interconnected resource representations:
The representations of the resources are interconnected using URLs, thereby enabling a
client to progress from one state to another.

Layered components:
Intermediaries, such as proxy servers, cache servers, gateways, etc, can be inserted between
clients and resources to support performance, security, etc.

Self-descriptive messages:
Resources are decoupled from their representation so that their content can be accessed
in a variety of formats, such as HTML, XML, plain text, PDF, JPEG, JSON, and others.

You can also check Restful interview questions with answers for beginners and experienced

Read more at http://www.java2blog.com/2013/04/restful-web-service-tutorial.html#3TUcFZcIYhzmmR0P.99

Pasted from <http://www.java2blog.com/2013/04/restful-web-service-tutorial.html> 

RUCS-C-NILS

